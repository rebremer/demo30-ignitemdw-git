{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "demo-ignitemdw-adfv2"
		},
		"demo30_ADLS_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'demo30_ADLS'"
		},
		"demo_ada_edl_SQLDB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'demo_ada_edl_SQLDB'"
		},
		"demo_shir_to_SQLDB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'demo_shir_to_SQLDB'"
		},
		"demo_vnetdataflows_SQLDB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'demo_vnetdataflows_SQLDB'"
		},
		"demo30_ADLS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://demoignitemdwstor.dfs.core.windows.net"
		},
		"demo30_ADLS_MI_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://demoignitemdwstor.dfs.core.windows.net"
		},
		"demo30_AKV_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://demo-ignitemdw-akv.vault.azure.net/"
		},
		"demo30_HTTP_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://raw.githubusercontent.com/rebremer/demo30-ignitemdw-git/master/moviesDB.csv"
		},
		"demo30_OnPremSQL_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "onpremconnectionstring"
		},
		"demo30_SQLDW_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "synapseconnectionstring"
		},
		"demo30_SQLDW_MI_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "synapseconnectionstring"
		},
		"demo_ada_edl_OnPremSQL_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "onpremadventureworks"
		},
		"demo30-ignitemdw-onpremintegrationruntime_properties_typeProperties_linkedInfo_resourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/513a7987-b0d9-4106-a24d-4b3f49136ea8/resourcegroups/blog-metadata-rg/providers/Microsoft.DataFactory/factories/blog-metadata-adf/integrationruntimes/shir"
		},
		"ADFv2_private_endpoint_adfv2_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/513a7987-b0d9-4106-a24d-4b3f49136ea8/resourceGroups/demo-ignitemdw-rg/providers/Microsoft.Storage/storageAccounts/demoignitemdwstor"
		},
		"ADFv2_private_endpoint_adfv2_properties_groupId": {
			"type": "string",
			"defaultValue": "dfs"
		},
		"AzureKeyVault1_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/513a7987-b0d9-4106-a24d-4b3f49136ea8/resourceGroups/blog-metadata-shir/providers/Microsoft.KeyVault/vaults/demo-ignitemdw-akv"
		},
		"AzureKeyVault1_properties_groupId": {
			"type": "string",
			"defaultValue": "vault"
		},
		"SQLDB_private_endpoin_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/513a7987-b0d9-4106-a24d-4b3f49136ea8/resourceGroups/test-edlprod1-rg/providers/Microsoft.Sql/servers/test-edlprod1-dbs"
		},
		"SQLDB_private_endpoin_properties_groupId": {
			"type": "string",
			"defaultValue": "sqlServer"
		},
		"demoRabo20201127_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/513a7987-b0d9-4106-a24d-4b3f49136ea8/resourceGroups/blog-datapipelineprod-rg/providers/Microsoft.Storage/storageAccounts/blogdatapipelinestorrbr4"
		},
		"demoRabo20201127_properties_groupId": {
			"type": "string",
			"defaultValue": "dfs"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/demo30_ignitemdw')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Demo30 of MS Ignite 21:41 CET",
				"activities": [
					{
						"name": "HTTP to ADLSgen2",
						"description": "Time changed 16:30 CET",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "movie"
										},
										"sink": {
											"name": "movie",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "title"
										},
										"sink": {
											"name": "title",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "genres"
										},
										"sink": {
											"name": "genres",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "year"
										},
										"sink": {
											"name": "year",
											"type": "Int16"
										}
									},
									{
										"source": {
											"name": "Rating"
										},
										"sink": {
											"name": "Rating",
											"type": "Int16"
										}
									},
									{
										"source": {
											"name": "Rotton Tomato"
										},
										"sink": {
											"name": "Rotton Tomato",
											"type": "Int16"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "demo30_http_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "demo30_adls_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "HTTP to ADLSgen2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "demo30_mappingdataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"adlssource": {},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "ManagedVNET",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/demo30_http_csv')]",
				"[concat(variables('factoryId'), '/datasets/demo30_adls_csv')]",
				"[concat(variables('factoryId'), '/dataflows/demo30_mappingdataflow')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/ManagedVNET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo30_ignitemdw_onprem')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Demo30 of MS Ignite test 13:11",
				"activities": [
					{
						"name": "OnPremSQL to ADLSgen2",
						"description": "OnPremSQL to ADLSgen2\n\n14:27 CET",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "movie"
										},
										"sink": {
											"name": "movie",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "title"
										},
										"sink": {
											"name": "title",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "genres"
										},
										"sink": {
											"name": "genres",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "year"
										},
										"sink": {
											"name": "year",
											"type": "Int16"
										}
									},
									{
										"source": {
											"name": "Rating"
										},
										"sink": {
											"name": "Rating",
											"type": "Int16"
										}
									},
									{
										"source": {
											"name": "Rotton Tomato"
										},
										"sink": {
											"name": "Rotton Tomato",
											"type": "Int16"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "demo30_onpremsql_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "demo30_adls_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "enrich data",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "OnPremSQL to ADLSgen2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "demo30_mappingdataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"adlssource": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/demo30_onpremsql_table')]",
				"[concat(variables('factoryId'), '/datasets/demo30_adls_csv')]",
				"[concat(variables('factoryId'), '/dataflows/demo30_mappingdataflow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo30_ignitemdw_onprem_adlsinkonly')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Demo30 of MS Ignite test 08:13",
				"activities": [
					{
						"name": "OnPremSQL to ADLSgen2",
						"description": "OnPremSQL to ADLSgen2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "movie"
										},
										"sink": {
											"name": "movie",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "title"
										},
										"sink": {
											"name": "title",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "genres"
										},
										"sink": {
											"name": "genres",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "year"
										},
										"sink": {
											"name": "year",
											"type": "Int16"
										}
									},
									{
										"source": {
											"name": "Rating"
										},
										"sink": {
											"name": "Rating",
											"type": "Int16"
										}
									},
									{
										"source": {
											"name": "Rotton Tomato"
										},
										"sink": {
											"name": "Rotton Tomato",
											"type": "Int16"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "demo30_onpremsql_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "demo30_adls_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/demo30_onpremsql_table')]",
				"[concat(variables('factoryId'), '/datasets/demo30_adls_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo40_1_vnetdataflows_sqldb')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Demo30 of MS Ignite 21:41 CET",
				"activities": [
					{
						"name": "Tranform and write to final SQLDB",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "demo30_SQLstaging_mappingdataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SQLDBstaging": {},
									"sink1": {},
									"sink2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "ManagedVNET",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/demo30_SQLstaging_mappingdataflow')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/ManagedVNET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo40_2_onprem_vnetdataflows_sqldb')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Demo30 of MS Ignite 21:41 CET",
				"activities": [
					{
						"name": "on prem SQL to staging SQL",
						"description": "Time changed 16:30 CET",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "movie"
										},
										"sink": {
											"name": "movie",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "title"
										},
										"sink": {
											"name": "title",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "genres"
										},
										"sink": {
											"name": "genres",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "year"
										},
										"sink": {
											"name": "year",
											"type": "Int16"
										}
									},
									{
										"source": {
											"name": "Rating"
										},
										"sink": {
											"name": "Rating",
											"type": "Int16"
										}
									},
									{
										"source": {
											"name": "Rotton Tomato"
										},
										"sink": {
											"name": "Rotton Tomato",
											"type": "Int16"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "demo30_onpremsql_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "demo_onprem_sqldb_staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Tranform and write to final SQLDB",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "on prem SQL to staging SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "demo30_SQLstaging_mappingdataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SQLDBstaging": {},
									"sink1": {},
									"sink2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "ManagedVNET",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/demo30_onpremsql_table')]",
				"[concat(variables('factoryId'), '/datasets/demo_onprem_sqldb_staging')]",
				"[concat(variables('factoryId'), '/dataflows/demo30_SQLstaging_mappingdataflow')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/ManagedVNET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo_ada_edl_consumer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Stage defined Archive to Information Factory",
						"description": "[[{\"source\":{\"schema\":\"dbo\",\"table\":\"DatabaseLog\"},\"destination\":{\"fileName\":\"dboDatabaseLog.parquet\"}}, {\"source\":{\"schema\":\"dbo\",\"table\":\"ErrorLog\"},\"destination\":{\"fileName\":\"dboErrorLog.parquet\"}}, {\"source\":{\"schema\":\"dbo\",\"table\":\"Person\"},\"destination\":{\"fileName\":\"PersonPerson.parquet\"}}, {\"source\":{\"schema\":\"dbo\",\"table\":\"PersonPhone\"},\"destination\":{\"fileName\":\"PersonPersonPhone.parquet\"}}, {\"source\":{\"schema\":\"dbo\",\"table\":\"PhoneNumberType\"},\"destination\":{\"fileName\":\"PersonPhoneNumberType.parquet\"}}, {\"source\":{\"schema\":\"dbo\",\"table\":\"StateProvince\"},\"destination\":{\"fileName\":\"PersonStateProvince.parquet\"}}, {\"source\":{\"schema\":\"dbo\",\"table\":\"Product\"},\"destination\":{\"fileName\":\"ProductionProduct.parquet\"}}, {\"source\":{\"schema\":\"dbo\",\"table\":\"ProductCategory\"},\"destination\":{\"fileName\":\"ProductionProductCategory.parquet\"}}, {\"source\":{\"schema\":\"dbo\",\"table\":\"ProductCostHistory\"},\"destination\":{\"fileName\":\"ProductionProductCostHistory.parquet\"}}, {\"source\":{\"schema\":\"dbo\",\"table\":\"Customer\"},\"destination\":{\"fileName\":\"SalesCustomer.parquet\"}}, {\"source\":{\"schema\":\"dbo\",\"table\":\"PersonCreditCard\"},\"destination\":{\"fileName\":\"SalesPersonCreditCard.parquet\"}}, {\"source\":{\"schema\":\"dbo\",\"table\":\"SalesOrderHeader\"},\"destination\":{\"fileName\":\"SalesSalesOrderHeader.parquet\"}}, {\"source\":{\"schema\":\"dbo\",\"table\":\"SalesOrderDetail\"},\"destination\":{\"fileName\":\"SalesSalesOrderDetail.parquet\"}}]",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy parquet to table",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{item().source.schema}.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "dataraw//@{item().destination.fileName}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"validateDataConsistency": false
									},
									"inputs": [
										{
											"referenceName": "demo_ada_edl_definedarchive_parquet",
											"type": "DatasetReference",
											"parameters": {
												"cw_fileName": "@item().destination.fileName"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "demo_ada_edl_sqldb_table_dynamic",
											"type": "DatasetReference",
											"parameters": {
												"cw_schema": "@item().source.schema",
												"cw_table": "@item().source.table"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Truncate staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Execute scripts on staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[TruncateTable]",
							"storedProcedureParameters": {
								"databaseName": {
									"value": "demo-informationfactory-db",
									"type": "String"
								},
								"tableName": {
									"value": "Person",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "demo_ada_edl_SQLDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Execute scripts on staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Stage defined Archive to Information Factory",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[uspLogError]"
						},
						"linkedServiceName": {
							"referenceName": "demo_ada_edl_SQLDB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"schema": "dbo",
									"table": "Person"
								},
								"destination": {
									"fileName": "PersonPerson.parquet"
								}
							}
						]
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/demo_ada_edl_SQLDB')]",
				"[concat(variables('factoryId'), '/datasets/demo_ada_edl_definedarchive_parquet')]",
				"[concat(variables('factoryId'), '/datasets/demo_ada_edl_sqldb_table_dynamic')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo_ada_edl_producer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SQL onprem tables to raw archive",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy table to parquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{item().source.schema}.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "dataraw//@{item().destination.fileName}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"validateDataConsistency": false
									},
									"inputs": [
										{
											"referenceName": "demo_ada_edl_sql_table_dynamic",
											"type": "DatasetReference",
											"parameters": {
												"cw_schema": "@item().source.schema",
												"cw_table": "@item().source.table"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "demo_ada_edl_rawarchive_parquet",
											"type": "DatasetReference",
											"parameters": {
												"cw_fileName": "@item().destination.fileName"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Raw archive to Defined archive",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "SQL onprem tables to raw archive",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy table to parquet_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{item().source.schema}.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "dataraw//@{item().destination.fileName}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"validateDataConsistency": false
									},
									"inputs": [
										{
											"referenceName": "demo_ada_edl_rawarchive_parquet",
											"type": "DatasetReference",
											"parameters": {
												"cw_fileName": "@item().destination.fileName"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "demo_ada_edl_definedarchive_parquet",
											"type": "DatasetReference",
											"parameters": {
												"cw_fileName": "@item().destination.fileName"
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"schema": "dbo",
									"table": "DatabaseLog"
								},
								"destination": {
									"fileName": "dboDatabaseLog.parquet"
								}
							},
							{
								"source": {
									"schema": "dbo",
									"table": "ErrorLog"
								},
								"destination": {
									"fileName": "dboErrorLog.parquet"
								}
							},
							{
								"source": {
									"schema": "Person",
									"table": "Person"
								},
								"destination": {
									"fileName": "PersonPerson.parquet"
								}
							},
							{
								"source": {
									"schema": "Person",
									"table": "PersonPhone"
								},
								"destination": {
									"fileName": "PersonPersonPhone.parquet"
								}
							},
							{
								"source": {
									"schema": "Person",
									"table": "PhoneNumberType"
								},
								"destination": {
									"fileName": "PersonPhoneNumberType.parquet"
								}
							},
							{
								"source": {
									"schema": "Person",
									"table": "StateProvince"
								},
								"destination": {
									"fileName": "PersonStateProvince.parquet"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "Product"
								},
								"destination": {
									"fileName": "ProductionProduct.parquet"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "ProductCategory"
								},
								"destination": {
									"fileName": "ProductionProductCategory.parquet"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "ProductCostHistory"
								},
								"destination": {
									"fileName": "ProductionProductCostHistory.parquet"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "Customer"
								},
								"destination": {
									"fileName": "SalesCustomer.parquet"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "PersonCreditCard"
								},
								"destination": {
									"fileName": "SalesPersonCreditCard.parquet"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "SalesOrderHeader"
								},
								"destination": {
									"fileName": "SalesSalesOrderHeader.parquet"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "SalesOrderDetail"
								},
								"destination": {
									"fileName": "SalesSalesOrderDetail.parquet"
								}
							}
						]
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/demo_ada_edl_sql_table_dynamic')]",
				"[concat(variables('factoryId'), '/datasets/demo_ada_edl_rawarchive_parquet')]",
				"[concat(variables('factoryId'), '/datasets/demo_ada_edl_definedarchive_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo_databricks_cosmosdb')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SQL onprem tables to ADLSgen2",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy table to parquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{item().source.schema}.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "dataraw//@{item().destination.fileName}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"validateDataConsistency": false
									},
									"inputs": [
										{
											"referenceName": "demo_databricks_cosmos_sql_table_dynamic",
											"type": "DatasetReference",
											"parameters": {
												"cw_schema": "@item().source.schema",
												"cw_table": "@item().source.table"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "demo_ada_edl_rawarchive_parquet",
											"type": "DatasetReference",
											"parameters": {
												"cw_fileName": "@item().destination.fileName"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "WriteToCosmosDB",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "SQL onprem tables to ADLSgen2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/insert_data_CosmosDB_OLTP_Python_Gremlin"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"schema": "dbo",
									"table": "person"
								},
								"destination": {
									"fileName": "dboPerson.parquet"
								}
							},
							{
								"source": {
									"schema": "dbo",
									"table": "relation"
								},
								"destination": {
									"fileName": "dboRelation.parquet"
								}
							}
						]
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]",
				"[concat(variables('factoryId'), '/datasets/demo_databricks_cosmos_sql_table_dynamic')]",
				"[concat(variables('factoryId'), '/datasets/demo_ada_edl_rawarchive_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo_vnetdataflows_adls_sqldb')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Demo30 of MS Ignite 21:41 CET",
				"activities": [
					{
						"name": "Tranform and write to SQLDB",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "demo30_mappingdataflow_SQLDB",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"adlssource": {},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "ManagedVNET",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/demo30_mappingdataflow_SQLDB')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/ManagedVNET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo30_adls_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "demo30_ADLS_MI",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "movies.csv",
						"fileSystem": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/demo30_ADLS_MI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo30_adls_csv_output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "demo30_ADLS_MI",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/demo30_ADLS_MI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo30_http_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "demo30_HTTP",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/demo30_HTTP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo30_onpremsql_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "demo30_OnPremSQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "movies"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/demo30_OnPremSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo30_synapse_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "demo30_SQLDW_MI",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Ratings"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/demo30_SQLDW_MI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo_ada_edl_definedarchive_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "demo30_ADLS_MI",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_fileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().cw_fileName",
							"type": "Expression"
						},
						"fileSystem": "datadefined"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/demo30_ADLS_MI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo_ada_edl_rawarchive_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "demo30_ADLS_MI",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_fileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().cw_fileName",
							"type": "Expression"
						},
						"fileSystem": "dataraw"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/demo30_ADLS_MI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo_ada_edl_sql_table_dynamic')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "demo_ada_edl_OnPremSQL",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_schema": {
						"type": "String"
					},
					"cw_table": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().cw_schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/demo_ada_edl_OnPremSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo_ada_edl_sqldb_table_dynamic')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "demo_ada_edl_SQLDB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_schema": {
						"type": "string"
					},
					"cw_table": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().cw_schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/demo_ada_edl_SQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo_databricks_cosmos_sql_table_dynamic')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "demo30_OnPremSQL",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_schema": {
						"type": "String"
					},
					"cw_table": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().cw_schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/demo30_OnPremSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo_onprem_sqldb_staging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "demo_shir_to_SQLDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "movie",
						"type": "nvarchar"
					},
					{
						"name": "title",
						"type": "nvarchar"
					},
					{
						"name": "genres",
						"type": "nvarchar"
					},
					{
						"name": "year",
						"type": "nvarchar"
					},
					{
						"name": "Rating",
						"type": "nvarchar"
					},
					{
						"name": "Rotton Tomato",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "movies"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/demo_shir_to_SQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo_staging_vnetdataflows_SQLDBtable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "demo_vnetdataflows_SQLDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PrimaryGenre",
						"type": "nvarchar"
					},
					{
						"name": "year",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AverageRating",
						"type": "float",
						"precision": 15
					},
					{
						"name": "HighestRated",
						"type": "nvarchar"
					},
					{
						"name": "LowestRated",
						"type": "nvarchar"
					},
					{
						"name": "NumberOfMovies",
						"type": "bigint",
						"precision": 19
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "movies"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/demo_vnetdataflows_SQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo_vnetdataflows_SQLDBtable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "demo_vnetdataflows_SQLDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PrimaryGenre",
						"type": "nvarchar"
					},
					{
						"name": "year",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AverageRating",
						"type": "float",
						"precision": 15
					},
					{
						"name": "HighestRated",
						"type": "nvarchar"
					},
					{
						"name": "LowestRated",
						"type": "nvarchar"
					},
					{
						"name": "NumberOfMovies",
						"type": "bigint",
						"precision": 19
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Ratings"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/demo_vnetdataflows_SQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ratingcsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "demo30_ADLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "logs"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/demo30_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-6058854188253685.5.azuredatabricks.net/",
					"accessToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "demo30_AKV",
							"type": "LinkedServiceReference"
						},
						"secretName": "pattoken"
					},
					"existingClusterId": "1008-130004-word26"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/demo30_AKV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo30_ADLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('demo30_ADLS_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('demo30_ADLS_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo30_ADLS_MI')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('demo30_ADLS_MI_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo30_AKV')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('demo30_AKV_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo30_HTTP')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('demo30_HTTP_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo30_OnPremSQL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "demo30_AKV",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('demo30_OnPremSQL_properties_typeProperties_connectionString_secretName')]"
					}
				},
				"connectVia": {
					"referenceName": "demo30-ignitemdw-onpremintegrationruntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/demo30-ignitemdw-onpremintegrationruntime')]",
				"[concat(variables('factoryId'), '/linkedServices/demo30_AKV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo30_SQLDW')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "demo30_AKV",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('demo30_SQLDW_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/demo30_AKV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo30_SQLDW_MI')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Authentication to SQLDW (Synapse) using Managed Identity of ADFv2",
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "demo30_AKV",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('demo30_SQLDW_MI_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/demo30_AKV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo_ada_edl_OnPremSQL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "demo30_AKV",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('demo_ada_edl_OnPremSQL_properties_typeProperties_connectionString_secretName')]"
					}
				},
				"connectVia": {
					"referenceName": "demo30-ignitemdw-onpremintegrationruntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/demo30-ignitemdw-onpremintegrationruntime')]",
				"[concat(variables('factoryId'), '/linkedServices/demo30_AKV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo_ada_edl_SQLDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('demo_ada_edl_SQLDB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo_shir_to_SQLDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('demo_shir_to_SQLDB_connectionString')]"
				},
				"connectVia": {
					"referenceName": "demo30-ignitemdw-onpremintegrationruntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/demo30-ignitemdw-onpremintegrationruntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo_vnetdataflows_SQLDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('demo_vnetdataflows_SQLDB_connectionString')]"
				},
				"connectVia": {
					"referenceName": "ManagedVNET",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/ManagedVNET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo30-ignitemdw-trigger1day')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "demo30_ignitemdw",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "demo30_ignitemdw_onprem",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2020-03-10T08:39:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/demo30_ignitemdw')]",
				"[concat(variables('factoryId'), '/pipelines/demo30_ignitemdw_onprem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ManagedVNET')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo30-ignitemdw-onpremintegrationruntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "Self hosted integration runtime running on a VM with connectivity to on prem SQL",
				"typeProperties": {
					"linkedInfo": {
						"resourceId": "[parameters('demo30-ignitemdw-onpremintegrationruntime_properties_typeProperties_linkedInfo_resourceId')]",
						"authorizationType": "Rbac"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo30_SQLstaging_mappingdataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "demo_staging_vnetdataflows_SQLDBtable",
								"type": "DatasetReference"
							},
							"name": "SQLDBstaging"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ratingcsv",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "demo_vnetdataflows_SQLDBtable",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "Select1"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "RankMovingsByRate"
						},
						{
							"name": "AggregateRatings"
						}
					],
					"script": "source(output(\n\t\tmovie as string,\n\t\ttitle as string,\n\t\tgenres as string,\n\t\tyear as string,\n\t\tRating as string,\n\t\t{Rotton Tomato} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SQLDBstaging\nSQLDBstaging select(mapColumn(\n\t\tmovie,\n\t\ttitle,\n\t\tgenres,\n\t\tyear,\n\t\tRating,\n\t\t{Rotten Tomato} = {Rotton Tomato},\n\t\teach(match(position==1),\n\t\t\t$$+'short' = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 filter(toInteger(year) > 1950) ~> Filter1\nFilter1 derive(PrimaryGenre = iif( locate('|',genres) > 1, left(genres, locate('|',genres)-1), genres)) ~> DerivedColumn1\nDerivedColumn1 window(over(PrimaryGenre,\n\t\tyear),\n\tdesc({Rotten Tomato}, true),\n\tRatingsRank = rank()) ~> RankMovingsByRate\nRankMovingsByRate aggregate(groupBy(PrimaryGenre,\n\t\tyear),\n\tAverageRating = avg(toInteger({Rotten Tomato})),\n\t\tHighestRated = first(title),\n\t\tLowestRated = last(title),\n\t\tNumberOfMovies = count()) ~> AggregateRatings\nAggregateRatings sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1\nAggregateRatings sink(input(\n\t\tPrimaryGenre as string,\n\t\tyear as integer,\n\t\tAverageRating as double,\n\t\tHighestRated as string,\n\t\tLowestRated as string,\n\t\tNumberOfMovies as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/demo_staging_vnetdataflows_SQLDBtable')]",
				"[concat(variables('factoryId'), '/datasets/ratingcsv')]",
				"[concat(variables('factoryId'), '/datasets/demo_vnetdataflows_SQLDBtable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo30_mappingdataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "demo30_adls_csv",
								"type": "DatasetReference"
							},
							"name": "adlssource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "demo30_synapse_table",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Select1"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "RankMovingsByRate"
						},
						{
							"name": "AggregateRatings"
						},
						{
							"name": "UpsertIfTrue"
						}
					],
					"script": "source(output(\n\t\tmovie as integer,\n\t\ttitle as string,\n\t\tgenres as string,\n\t\tyear as short,\n\t\tRating as short,\n\t\t{Rotton Tomato} as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> adlssource\nadlssource select(mapColumn(\n\t\tmovie,\n\t\ttitle,\n\t\tgenres,\n\t\tyear,\n\t\tRating,\n\t\t{Rotten Tomato} = {Rotton Tomato},\n\t\teach(match(position==1),\n\t\t\t$$+'short' = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 filter(toInteger(year) > 1950) ~> Filter1\nFilter1 derive(PrimaryGenre = iif( locate('|',genres) > 1, left(genres, locate('|',genres)-1), genres)) ~> DerivedColumn1\nDerivedColumn1 window(over(PrimaryGenre,\n\t\tyear),\n\tdesc({Rotten Tomato}, true),\n\tRatingsRank = rank()) ~> RankMovingsByRate\nRankMovingsByRate aggregate(groupBy(PrimaryGenre,\n\t\tyear),\n\tAverageRating = avg(toInteger({Rotten Tomato})),\n\t\tHighestRated = first(title),\n\t\tLowestRated = last(title),\n\t\tNumberOfMovies = count()) ~> AggregateRatings\nAggregateRatings alterRow(upsertIf(true())) ~> UpsertIfTrue\nUpsertIfTrue sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['PrimaryGenre','year'],\n\tformat: 'table',\n\tstaged: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/demo30_adls_csv')]",
				"[concat(variables('factoryId'), '/datasets/demo30_synapse_table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo30_mappingdataflow_SQLDB')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "demo30_adls_csv",
								"type": "DatasetReference"
							},
							"name": "adlssource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "demo_vnetdataflows_SQLDBtable",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Select1"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "RankMovingsByRate"
						},
						{
							"name": "AggregateRatings"
						},
						{
							"name": "UpsertIfTrue"
						}
					],
					"script": "source(output(\n\t\tmovie as integer,\n\t\ttitle as string,\n\t\tgenres as string,\n\t\tyear as short,\n\t\tRating as short,\n\t\t{Rotton Tomato} as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> adlssource\nadlssource select(mapColumn(\n\t\tmovie,\n\t\ttitle,\n\t\tgenres,\n\t\tyear,\n\t\tRating,\n\t\t{Rotten Tomato} = {Rotton Tomato},\n\t\teach(match(position==1),\n\t\t\t$$+'short' = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 filter(toInteger(year) > 1950) ~> Filter1\nFilter1 derive(PrimaryGenre = iif( locate('|',genres) > 1, left(genres, locate('|',genres)-1), genres)) ~> DerivedColumn1\nDerivedColumn1 window(over(PrimaryGenre,\n\t\tyear),\n\tdesc({Rotten Tomato}, true),\n\tRatingsRank = rank()) ~> RankMovingsByRate\nRankMovingsByRate aggregate(groupBy(PrimaryGenre,\n\t\tyear),\n\tAverageRating = avg(toInteger({Rotten Tomato})),\n\t\tHighestRated = first(title),\n\t\tLowestRated = last(title),\n\t\tNumberOfMovies = count()) ~> AggregateRatings\nAggregateRatings alterRow(insertIf(true())) ~> UpsertIfTrue\nUpsertIfTrue sink(input(\n\t\tPrimaryGenre as string,\n\t\tyear as integer,\n\t\tAverageRating as double,\n\t\tHighestRated as string,\n\t\tLowestRated as string,\n\t\tNumberOfMovies as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/demo30_adls_csv')]",
				"[concat(variables('factoryId'), '/datasets/demo_vnetdataflows_SQLDBtable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/ADFv2_private_endpoint_adfv2')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('ADFv2_private_endpoint_adfv2_properties_privateLinkResourceId')]",
				"groupId": "[parameters('ADFv2_private_endpoint_adfv2_properties_groupId')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureKeyVault1')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureKeyVault1_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureKeyVault1_properties_groupId')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/SQLDB_private_endpoin')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('SQLDB_private_endpoin_properties_privateLinkResourceId')]",
				"groupId": "[parameters('SQLDB_private_endpoin_properties_groupId')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/demoRabo20201127')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('demoRabo20201127_properties_privateLinkResourceId')]",
				"groupId": "[parameters('demoRabo20201127_properties_groupId')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/test_miliseconds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "demo30_ADLS_MI",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dboBuildVersion.txt",
						"fileSystem": "datemilisecondtest"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SystemInformationID",
						"type": "String"
					},
					{
						"name": " Database Version",
						"type": "String"
					},
					{
						"name": " VersionDate",
						"type": "String"
					},
					{
						"name": " ModifiedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/demo30_ADLS_MI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/test_milliseconds')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Test milliseconds",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "test_miliseconds_dataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/test_miliseconds_dataflow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/test_milliseconds_output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "demo30_ADLS_MI",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "datemilisecondtest"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/demo30_ADLS_MI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/test_miliseconds_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "test_miliseconds",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "test_milliseconds_output",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tSystemInformationID as string,\n\t\t{ Database Version} as string,\n\t\t{ VersionDate} as timestamp 'yyyy-MM-dd HH:mm:ss.SSS',\n\t\t{ ModifiedDate} as timestamp 'yyyy-MM-dd HH:mm:ss.SSS'\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/test_miliseconds')]",
				"[concat(variables('factoryId'), '/datasets/test_milliseconds_output')]"
			]
		}
	]
}